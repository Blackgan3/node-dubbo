/**
 * Created by panzhichao on 16/8/18.
 */
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const Response_1 = require("./enum/Response");
const Decoder = require('hessian.js').DecoderV2;
// const Response = {
//     OK: 20,
//     CLIENT_TIMEOUT: 30,
//     SERVER_TIMEOUT: 31,
//     BAD_REQUEST: 40,
//     BAD_RESPONSE: 50,
//     SERVICE_NOT_FOUND: 60,
//     SERVICE_ERROR: 70,
//     SERVER_ERROR: 80,
//     CLIENT_ERROR: 90
// };
const RESPONSE_WITH_EXCEPTION = 0;
const RESPONSE_VALUE = 1;
const RESPONSE_NULL_VALUE = 2;
function decode(heap) {
    // return new Promise((resolve, reject) => {
    let flag, result;
    if (heap[3] !== Response_1.default.OK) {
        // reject(heap.slice(18, heap.length - 1).toString());
        throw new Error(heap.slice(18, heap.length - 1).toString());
    }
    result = new Decoder(heap.slice(16, heap.length));
    flag = result.readInt();
    switch (flag) {
        case RESPONSE_NULL_VALUE:
            return null;
        case RESPONSE_VALUE:
            return result.read();
        case RESPONSE_WITH_EXCEPTION:
            let excep = result.read();
            !(excep instanceof Error) && (excep = new Error(excep));
            throw excep;
        default:
            throw new Error(`Unknown result flag, expect '0' '1' '2', get ${flag}`);
    }
    // });
}
exports.default = decode;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGVjb2RlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiRGVjb2RlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBQ0gsWUFBWSxDQUFDOztBQUNiLDhDQUF1QztBQUV2QyxNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUMsU0FBUyxDQUFDO0FBQ2hELHFCQUFxQjtBQUNyQixjQUFjO0FBQ2QsMEJBQTBCO0FBQzFCLDBCQUEwQjtBQUMxQix1QkFBdUI7QUFDdkIsd0JBQXdCO0FBQ3hCLDZCQUE2QjtBQUM3Qix5QkFBeUI7QUFDekIsd0JBQXdCO0FBQ3hCLHVCQUF1QjtBQUN2QixLQUFLO0FBRUwsTUFBTSx1QkFBdUIsR0FBRyxDQUFDLENBQUM7QUFDbEMsTUFBTSxjQUFjLEdBQUcsQ0FBQyxDQUFDO0FBQ3pCLE1BQU0sbUJBQW1CLEdBQUcsQ0FBQyxDQUFDO0FBRTlCLGdCQUErQixJQUFJO0lBQy9CLDRDQUE0QztJQUM1QyxJQUFJLElBQUksRUFBRSxNQUFNLENBQUM7SUFDakIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLGtCQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUMxQixzREFBc0Q7UUFDdEQsTUFBTSxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7SUFDaEUsQ0FBQztJQUNELE1BQU0sR0FBRyxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNsRCxJQUFJLEdBQUcsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ3hCLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDWCxLQUFLLG1CQUFtQjtZQUNwQixNQUFNLENBQUMsSUFBSSxDQUFDO1FBQ2hCLEtBQUssY0FBYztZQUNmLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDekIsS0FBSyx1QkFBdUI7WUFDeEIsSUFBSSxLQUFLLEdBQUcsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO1lBQzFCLENBQUMsQ0FBQyxLQUFLLFlBQVksS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztZQUN4RCxNQUFNLEtBQUssQ0FBQztRQUNoQjtZQUNJLE1BQU0sSUFBSSxLQUFLLENBQUMsZ0RBQWdELElBQUksRUFBRSxDQUFDLENBQUM7SUFDaEYsQ0FBQztJQUVELE1BQU07QUFDVixDQUFDO0FBdkJELHlCQXVCQyJ9